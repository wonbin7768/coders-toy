/* 로그인 전 타임라인 or 방금 회원가입해서 팔로우나 뭐 어떤 연계가
없을시 근 3달간에 좋아요 높은순으로 몇개 뿌려주기
+ 광고

팔로우 한사람들의 최근 게시물 + 광고

내주변 위치기반으로 게시물 뿌리기 
------------------------------------------------------------------
****** 당장 해야할것 *******
insertTimeLine 에서 사진 업로드 input tag 스타일링 react 이미지 업로드 구글링
 ㄴ account 팔로워 table 생성후
 ㄴ dummy account 및 follower insert and follower 중에 tag 해서
 project or study group member 를 모집 하는 기능 
-follow table -> seq ,팔로우 한사람 , 당한사람 
  ㄴ이게 데이터가 많아 지면 감당이 됨?
  ㄴ안됨 account id가 pk로 되어 있는데 seq 로 분할하고 예를들어 1~1000 까지의 account
  seq를 가진 유저의 팔로우 테이블 1001~2000까지의 seq를가진 유저의 팔로우 테이블 이런식으로
  분할해서 관리하면 되나? 이게 베스튼거 같은디  
-insert timeline backend...
 ㄴfront 에서 formdata file 넘기는거부터 multer 로 back 에서 받아 업로드 하는거까지
  첨부터 차근차근 갈아 엎어야함 너무 꼬인듯
  ㄴmemorystoage가 아닌 diskstorage로 전환
  ㄴ사진 사이즈 제한
  ㄴback에서 multer 제구성 후에도 안되면 front에서 데이터 담는거
  자체가 문제인가
***************error note******************
img upload 과정에서 front 에서의 formData.append 하는 과정에서 input onChange function
에서 append를 한경우 데이터가 저장되지않고 날아간다.
submit onClick function 에서 append해야만 날아가지 않고 그대로 전송된다.
formData의 특성인가? 구글링해도 잘나오지 않는다. 
왜 다른 function에서 append 한경우 데이터가 휘발성으로 날아가는지
-다른 컴포넌트들 맵핑할때 전역변수로 지정한 formData가 새롭게 정의 되서 날아가는건가
****** 중간 로드맵 *******
아 ui 하기 너무 귀찮누
account 수정 -> 탐라 작성페이지 -> account porfil img 추가 기본값 기본이미지로 저장->탐라 좋아요 
게시글에서의 태그 기능 -> 알람 새로운 table 
direact message - socket io 등 리서치 필요 
alarm - 새로운 tab
account db 를 더생각해보고 탐라 작성페이지 넘어가야하나
-----------------------------------------------------------------
******account 수정 *********
ㅁaccount db 수정
 ㄴ컨셉인 위치기반으로 하기 위해 위치정보를 추가 colum으로 간단히 5가지 
   정도의 위치 키워드를 정하는것으로하고 ( , )를 기점으로 나눠 검색하여
   알고리즘 형성 하도록 진행해야겠다
   ㄴ mysql json 으로 mutilple rows 로 결과 값 받는것까지 해결했다
   위치기반을 이것으로 알고리즘 짜면될듯
■signUp page 수정
ㅁmy page 작성페이지
  ㄴ 비밀번호 확인 까지 진행

ㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁ
ㅁㅁ쉽고 간단한게 최고다ㅁㅁ
ㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁㅁ
-------------------------------------------------------------------
*****timeline*****
slice는 상태관리할때 사용했는데 timeline에선 props도 한번만 전달하면 되서
굳이 사용할필요 없을듯
■ 맵핑
ㅁ타임라인 작성 페이지
 ㄴUI  = 업로드할 사진 , 글  태그(?)
 ㄴ로그인한 id , img , content , tag.id

ㅁtimeline 좋아요
 ㄴupdate 구현 좋아요 구현할때 한 댓글당 한개의 좋아요만 할수있다면
   로직을 어캐 해야하지 db테이블을 하나 더파서 하나의 댓글당
   하트이미지 옆 좋아요 개수 or 하트이미지 안에 좋아요 개수
   하트클릭 -> tl_seq + login id axios 요청 -> server에서 comment table의
   tl_like 증가 -> (timeline table에서 좋아요한 id를 저장하는 칼럼을 만들어서 
   id를 토큰화해서 하트이미지를 빨간하트와 공백하트로 구분해서 로딩 or 다른
   테이블을 만들어 tl_seq 참조 tl_like , 좋아요한 id) 따로 테이블을 나누는게
   데이터가 방대해졌을때나 로딩하는 측면에서 더좋을까 잘모르겠다
   일단 join 연습도 해볼겸 나눠보자00
 timelinelike tl_seq ,tl_like ,like_id 
 서버 tl_like 코딩 
 db tl_like 기본 0으로 수정 -클
 ㄴtimeline insert 부터 코딩해야 매끄러운 코딩이 가능하다 가정하여 코딩
   해야하는 불편함이 있어 수정사항이 생김으로 뒤로 미룬후 timeline insert
   부터 코딩후에 진행해야겠다

------------------------------------------------------------------
■댓글
 ㄴ탐라에 속해있다 -> 코멘트를 다른 컴포넌트로 빼서 맵핑해야하나?
 ㄴserver 쪽에서 따로빼서 이너조인으로 가져오고 mainpage에서 받아서
     comment 도 같이 props로 넘기고 뿌려주는걸 timeline component에서 
     if로 뿌려주는걸로 초안
ㄴtimeline component 자체를 맵핑 하여 반복하기 때문에 comment를 다른 component로
    분리해서 하기엔 불필요한 반복이 일어날듯하다
 ㄴ*해결책 1.server side에서 join으로 한번에 긁어와 front에서 분류
          2.server side에서 페이지 분류(?)로 따로 긁어와 보내기? 될지 모르겟음
      해결!! 걍 front에서 axios 요청 2번 보내면 됨  
   ■comment timeline 별로 분배해서 뿌리기
        ㄴ지금 timeline componet에서 maping 해서 댓글 뿌리는 구조인데
          자료가 방대해지면 속도 면에서 오래걸리지 않을까 후 개선해야할듯
   ■comment id 화면 설계
   ■comment 게시 -> 로그인되있는 id , 게시하려는 게시글 tl_seq, cm_content
    ㄴ***에러1 로딩 됬을때 comment 바로 로딩 되지 않음
            ㄴ이건 기존 main 에 있는 useEffect 에서 axios 요청을 2번 보내는
              속도 문제일꺼라 생각해 comment axios 요청을 timeline componet의
              useEffect로 옮기니 해결
    ㄴ***에러2 댓글 게시할떄 tl_seq를 버튼에 value 값을 주어서 가져와
               전달하는 방식 인데 버튼에 value값이 바로 적용되지않음
            ㄴuseEffect 로 감싸서 해결했다
    ㄴ***에러3 댓글작성시 전체가 랜더링 되지 않고 바로 적용 되게 하고싶다
              몇가지 실험 해봤는데 첫번째 게시 버튼을 눌럿을때 바로 state 적용되나
              두번째 부터 댓글이 모두 사라지는현상 왜그를까
            ㄴserver side에서 insertCommentDB에서 다중쿼리로 해결해보려했으나
            데이터 저장은되나 출력이 되지않아 분리하여 입력후 출력으로 분리하여 
            해결했다 
    ■comment 삭제
            ㄴcm_seq 값 뽑아서 삭제 구현 하면 될듯
            ㄴbutton onClick 사용시 function 문법 기억해야할듯 별거 아닌거에
             애먹었다. ex) onClick = {()=>deleteCM(item.cm_seq)} 이렇게 써야함
            onClick={deleteCM(item.cm_seq)} 요래 썻다가 삽질했다.

-------------------------------------------------------------------- 
ㅁ더보기
ㅁ위치기반 알고리즘 !account 먼저 수정해야함

*************** 
-slice에 더미 데이터 넣어서 timeline 에서 체크하고 서버측 코딩하면됨
    ㄴslice 더미 timeline 체크 완료
    ㄴ중간 의문점 여러개의 타임라인을 한번에 뿌릴려면 어케해야되나
    ㄴ일단 먼저 서버측 코딩 시작해보자
    ㄴ서버에서 가져오려는 조건이 있어야됨 sql where=?...
    ㄴ일단 가져오고 그후에 알고리즘 만들어 바꿔야할듯?
-타임라인 뿌려주는 알고리즘 만들기 
 ㄴ 컨셉을 위치기반으로 정하자 곧 알고리즘 또한 위치기반 키워드를 몇가지
    선택하여 뿌려주는것으로 ex) 서울,경기,고양 등
 *위치기반 키워드를 db 테이블을 따로만들어? 아님 account에 같이 넣나
 회원가입할떄 애초에 1~5 정도 위치를 고를수 있게하고 마이페이지에서 
 수정가능하게 하면?
 타임라인 테이블에서 fk로 account 에서 받아서 저장하면 불러올떄?
 아니면 조인으로 되나? fk 지정안해도 조인으로 될듯?
 ㄴ그럼 일단 조건없음으로 코딩하고 그후에 재수정 해보자
------------------------------------------------------------------
*/
